import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,c as t,b as p,d as e,o}from"./app-DjqQ9Aow.js";const c={},l=e(`<h3 id="定义" tabindex="-1"><a class="header-anchor" href="#定义"><span>定义</span></a></h3><p>适配器模式是一种结构型设计模式，它的核心思想是将一个接口转换成客户期望的另一个接口，使得原本不兼容的接口可以协同工作。下面通过一个简单的JavaScript示例来说明适配器模式的应用。</p><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h3><p>场景设定</p><p>假设我们有两个音乐播放器类：AndroidPlayer 和 IosPlayer，它们提供了获取音乐的方法，但接口不同。现在我们需要一个统一的方式去控制这两个不同平台的播放器播放音乐。</p><ol><li>es5</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 原有的Android播放器类</span>
<span class="token keyword">function</span> <span class="token function">AndroidPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token class-name">AndroidPlayer</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">playMusic</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">songName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Playing </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>songName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> on Android Player</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 原有的iOS播放器类</span>
<span class="token keyword">function</span> <span class="token function">IosPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token class-name">IosPlayer</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">playSong</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">songName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Playing </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>songName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> on iOS Player</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">MusicPlayerAdapter</span><span class="token punctuation">(</span><span class="token parameter">player</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>player <span class="token operator">=</span> player<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">MusicPlayerAdapter</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">play</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">songName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>player <span class="token keyword">instanceof</span> <span class="token class-name">AndroidPlayer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>player<span class="token punctuation">.</span><span class="token function">playMusic</span><span class="token punctuation">(</span>songName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>player <span class="token keyword">instanceof</span> <span class="token class-name">IosPlayer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>player<span class="token punctuation">.</span><span class="token function">playSong</span><span class="token punctuation">(</span>songName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 使用适配器</span>
<span class="token keyword">const</span> androidPlayer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AndroidPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> iosPlayer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IosPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> androidAdapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MusicPlayerAdapter</span><span class="token punctuation">(</span>androidPlayer<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> iosAdapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MusicPlayerAdapter</span><span class="token punctuation">(</span>iosPlayer<span class="token punctuation">)</span><span class="token punctuation">;</span>

androidAdapter<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token string">&#39;Song A&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: Playing Song A on Android Player</span>
iosAdapter<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token string">&#39;Song B&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: Playing Song B on iOS Player</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>es6</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 原有的Android播放器类</span>
<span class="token keyword">class</span> <span class="token class-name">AndroidPlayer</span> <span class="token punctuation">{</span>
  <span class="token function">playMusic</span><span class="token punctuation">(</span><span class="token parameter">songName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Playing </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>songName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> on Android Player</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 原有的iOS播放器类</span>
<span class="token keyword">class</span> <span class="token class-name">IosPlayer</span> <span class="token punctuation">{</span>
  <span class="token function">playSong</span><span class="token punctuation">(</span><span class="token parameter">songName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Playing </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>songName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> on iOS Player</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 适配器类，用于适配两种不同的播放器接口</span>
<span class="token keyword">class</span> <span class="token class-name">MusicPlayerAdapter</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">player</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>player <span class="token operator">=</span> player<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">play</span><span class="token punctuation">(</span><span class="token parameter">songName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>player <span class="token keyword">instanceof</span> <span class="token class-name">AndroidPlayer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>player<span class="token punctuation">.</span><span class="token function">playMusic</span><span class="token punctuation">(</span>songName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>player <span class="token keyword">instanceof</span> <span class="token class-name">IosPlayer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>player<span class="token punctuation">.</span><span class="token function">playSong</span><span class="token punctuation">(</span>songName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 使用适配器</span>
<span class="token keyword">const</span> androidPlayer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AndroidPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> iosPlayer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IosPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> androidAdapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MusicPlayerAdapter</span><span class="token punctuation">(</span>androidPlayer<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> iosAdapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MusicPlayerAdapter</span><span class="token punctuation">(</span>iosPlayer<span class="token punctuation">)</span><span class="token punctuation">;</span>

androidAdapter<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token string">&#39;Song A&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: Playing Song A on Android Player</span>
iosAdapter<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token string">&#39;Song B&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: Playing Song B on iOS Player</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function i(u,r){const n=a("Mermaid");return o(),t("div",null,[p(n,{id:"mermaid-0",code:"eJzT1dXlKsksyUm1UnjZ0PSytffpzBXPVix8uqefCyiloMCVXpRYkKHgE8SlAASO0U/X73yxcWGsAlDuyZ4FT1uXAll2Ck7RLxa3vly6AagZqgCs3Amk7MXeNc96Fz2d0AdW6Rz9dN2iZx3bn69eH8tVXJoEMR5ht2NKYkFJahFQuxNXal6KAhcAqu5Hiw=="}),l])}const m=s(c,[["render",i],["__file","7.适配器模式.html.vue"]]),v=JSON.parse('{"path":"/notes/design-mode/7.%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F.html","title":"适配器模式","lang":"zh-CN","frontmatter":{"title":"适配器模式","date":"2024-05-18T14:26:42.000Z","order":7,"icon":"layer-group","category":["笔记"],"tags":["设计模式"],"description":"定义 适配器模式是一种结构型设计模式，它的核心思想是将一个接口转换成客户期望的另一个接口，使得原本不兼容的接口可以协同工作。下面通过一个简单的JavaScript示例来说明适配器模式的应用。 示例 场景设定 假设我们有两个音乐播放器类：AndroidPlayer 和 IosPlayer，它们提供了获取音乐的方法，但接口不同。现在我们需要一个统一的方式去...","head":[["meta",{"property":"og:url","content":"https://www.lfangq.top/notes/design-mode/7.%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"Lfangq"}],["meta",{"property":"og:title","content":"适配器模式"}],["meta",{"property":"og:description","content":"定义 适配器模式是一种结构型设计模式，它的核心思想是将一个接口转换成客户期望的另一个接口，使得原本不兼容的接口可以协同工作。下面通过一个简单的JavaScript示例来说明适配器模式的应用。 示例 场景设定 假设我们有两个音乐播放器类：AndroidPlayer 和 IosPlayer，它们提供了获取音乐的方法，但接口不同。现在我们需要一个统一的方式去..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-05T05:25:35.000Z"}],["meta",{"property":"article:author","content":"Lfangq"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:published_time","content":"2024-05-18T14:26:42.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-05T05:25:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"适配器模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-18T14:26:42.000Z\\",\\"dateModified\\":\\"2024-06-05T05:25:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lfangq\\",\\"url\\":\\"https://www.lfangq.top/\\"}]}"]]},"headers":[{"level":3,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]}],"git":{"createdTime":1716882891000,"updatedTime":1717565135000,"contributors":[{"name":"lfangq","email":"2251234678@qq.com","commits":2}]},"readingTime":{"minutes":1.51,"words":452},"filePathRelative":"notes/design-mode/7.适配器模式.md","localizedDate":"2024年5月18日","excerpt":"","autoDesc":true}');export{m as comp,v as data};
